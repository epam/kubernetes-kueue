#!/bin/sh

set -o errexit
set -o nounset
set -o pipefail
set -x

# External variables
# JOB_COMPLETION_INDEX - completion index of the job.
# POD_IP               - current pod IP

array_indexes="{{.ArrayIndexes}}"
container_indexes=$(echo "$array_indexes" | awk -F';' -v idx="$JOB_COMPLETION_INDEX" '{print $((idx + 1))}')

for i in $(seq 0 $SLURM_TASKS_PER_NODE)
do
  container_index=$(echo "$container_indexes" | awk -F',' -v idx="$i" '{print $((idx + 1))}')

	if [ -z "$container_index" ]; then
		break
	fi

	mkdir -p {{.EnvsPath}}/$i

{{if .FirstNodeIP}}
  if [[ "$JOB_COMPLETION_INDEX" -eq 0 ]]; then
    SLURM_JOB_FIRST_NODE_IP=${POD_IP}
  else
    timeout={{.FirstNodeIPTimeoutSeconds}}
    start_time=$(date +%s)
    while true; do
      ip=$(nslookup "$SLURM_JOB_FIRST_NODE" | grep "Address 1" | awk 'NR==2 {print $3}') || true
      if [[ -n "$ip" ]]; then
        SLURM_JOB_FIRST_NODE_IP=$ip
        break
      else
        current_time=$(date +%s)
        elapsed_time=$((current_time - start_time))
        if [ "$elapsed_time" -ge "$timeout" ]; then
          echo "Timeout reached, IP address for the first node ($SLURM_JOB_FIRST_NODE) not found."
          break
        fi
        echo "IP Address for the first node ($SLURM_JOB_FIRST_NODE) not found, retrying..."
        sleep 1
      fi
    done
  fi
{{end}}
	cat << EOF > {{.EnvsPath}}/$i/{{.SlurmEnvFilename}}
SLURM_SUBMIT_HOST=$HOSTNAME
SLURM_JOB_ID=$(expr $JOB_COMPLETION_INDEX \* $SLURM_TASKS_PER_NODE + $i + $SLURM_ARRAY_JOB_ID)
SLURM_JOBID=$(expr $JOB_COMPLETION_INDEX \* $SLURM_TASKS_PER_NODE + $i + $SLURM_ARRAY_JOB_ID)
SLURM_ARRAY_TASK_ID=$container_index
SLURM_JOB_FIRST_NODE_IP=${SLURM_JOB_FIRST_NODE_IP:-""}
EOF

done
